[project]
name = "gentropy-manuscript"
version = "0.1.0"
description = "The analysis done for the manuscript"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "altair>=5.5.0",
    "bokeh>=3.4.3",
    "dash-bio>=1.0.2",
    "gentropy>=2.2.0",
    "ipython>=9.0.2",
    "jupyterlab>=4.3.6",
    "notebook>=7.3.3",
    "numpy>=1.26.4",
    "patchworklib>=0.6.3",
    "plotly>=5.24.1",
    "plotnine>=0.12.4",
    "polars>=1.26.0",
    "pre-commit>=4.2.0",
    "requests>=2.32.3",
    "scipy>=1.11.4",
    "seaborn>=0.13.2",
    "statsmodels>=0.14.4",
    "sunburst>=1.0.0a2",
    "tagore>=1.1.2",
    "wordcloud>=1.9.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/manuscript_methods"]


[tool.ruff.lint]
select = ["D", "I", "E"]
ignore = [
    "E501",    # line too long
    "E731",    # do not assign a lambda expression, use a def
    "PLC0208", # Use a sequence type instead of a `set` when iterating over values
    "PLR0911", # Too many return statements ({returns} > {max_returns})
    "PLR0912", # Too many branches ({branches} > {max_branches})
    "PLR0913", # Too many arguments to function call ({c_args} > {max_args})
    "PLR0915", # Too many statements ({statements} > {max_statements})
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "PLW2901", # Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target
    "UP006",   # keep type annotation style as is
    "UP007",   # keep type annotation style as is
    "UP038",   # Use `X | Y` in `isinstance` call instead of `(X, Y)`
    "D107",    # Ignore missing docstring in __init__
    "D101",    # Missing docstring in public class
]

[tool.ruff]
line-length = 120

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.uv.sources]
gentropy = { git = "https://github.com/opentargets/gentropy", tag = "v2.3.0-rc.4" }
plotnine = { git = "https://github.com/has2k1/plotnine.git", rev = "v0.12.4" }



[dependency-groups]
dev = [
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "pytest-sugar>=1.0.0",
    "pytest-xdist>=3.7.0",
]

[tool.pytest.ini_options]
addopts = "-n auto --doctest-modules --cov=src/ --cov-report=xml --cache-clear"
pythonpath = ["."]
testpaths = ["tests", "src/manuscript_methods"]
markers = ["step_test"]
